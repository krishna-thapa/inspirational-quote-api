###
#  summary: Get a random quote from a quotes table
#  tags:
#    - Quote
#  responses:
#    200:
#      description: Success response of the random quote.
#      schema:
#        $ref: '#/definitions/com.krishna.model.QuotesQuery'
#    404:
#      description: Not found. Database is empty.
###
GET      /random               controllers.quotes.QuoteController.getRandomQuote

###
#  summary: Get a quote of the day from a quotes table
#  description: "It can take optional date path paramter in milliseconds format that can give past 5 days of quote of the day, https://codechi.com/dev-tools/date-to-millisecond-calculators/"
#  tags:
#    - Quote
#  parameters:
#    - name: "date"
#      in: "query"
#      description: "Last five dates in milliseconds"
#      required: false
#      type: "Option[String]"
#  responses:
#    200:
#      description: Success response of the quote of the day.
#      schema:
#        $ref: '#/definitions/com.krishna.model.QuotesQuery'
#    404:
#      description: Not found. Database is empty.
###
GET      /quoteOfTheDay         controllers.quotes.QuoteController.getQuoteOfTheDay(date: Option[String])

###
#  summary: Get last 5 quote of the day
#  description: "Only retreive last 5 quote of the day including today's quote"
#  tags:
#    - Quote
#  responses:
#    200:
#      description: Success response of the quote of the day.
#      schema:
#        $ref: '#/definitions/com.krishna.model.QuotesQuery'
#    404:
#      description: Not found. Database is empty.
#    502:
#      description: Bad Gateway.
###
GET      /quotesOfTheDay         controllers.quotes.QuoteController.getCachedQuotes

###
#  summary: Get a random 10 quotes from a quotes table
#  tags:
#    - Quote
#  responses:
#    200:
#      description: Success response of the quotes.
#      schema:
#        $ref: '#/definitions/com.krishna.model.QuotesQuery'
#    404:
#      description: Not found. Database is empty.
###
GET      /randomTen             controllers.quotes.QuoteController.getFirst10Quotes

###
#  summary: Get all the quotes from a quotes table
#  description: "This can only be done by the admin."
#  tags:
#    - Quote
#  parameters:
#    - name: "offset"
#      in: "query"
#      description: "For paginiation - default to 0"
#      type: "integer"
#    - name: "limit"
#      in: "query"
#      description: "For paginiation - default to 100"
#      type: "integer"
#  responses:
#    200:
#      description: Success response of the quotes.
#      schema:
#        $ref: '#/definitions/com.krishna.model.QuotesQuery'
#    404:
#      description: Not found. Database is empty.
#    502:
#      description: Bad Gateway.
#  security:
#    - TokenKey: []
###
GET      /allQuotes            controllers.quotes.QuoteController.getAllQuotes

###
#  summary: Add a favorite quote in the fav_quotes table
#  description: "This can only be done by the logged in user. Post multiple times to change the status of tag as boolean type. Assuming that the csvId is present in the database."
#  tags:
#    - Quote
#  parameters:
#    - name: "csvId"
#      in: "path"
#      description: "Required"
#      required: true
#      type: "string"
#  responses:
#    200:
#      description: Success response of adding quote to favorite table.
#      schema:
#        $ref: '#/definitions/com.krishna.model.QuotesQuery'
#    400:
#      description: Bad request. ID should be in CSV[0-9] format
#    404:
#      description: Not found. Database is empty.
#    502:
#      description: Bad Gateway.
#  security:
#    - TokenKey: []
###
POST     /fav/:csvId            controllers.quotes.QuoteController.favQuote(csvId: String)

###
#  summary: Get all the quotes that are marked as favorite in the fav_quotes table
#  tags:
#    - Quote
#  responses:
#    200:
#      description: Success response of the favourite quotes.
#      schema:
#        $ref: '#/definitions/com.krishna.model.QuotesQuery'
#    404:
#      description: Not found. Database is empty.
#    502:
#      description: Bad Gateway.
#  security:
#    - TokenKey: []
###
GET      /favQuotes             controllers.quotes.QuoteController.getFavQuotes

###
#  summary: Get a genre selected random quote from a quotes table
#  description: "Only the hard-coded genre should be used"
#  tags:
#    - Quote
#  parameters:
#    - name: "genre"
#      in: "path"
#      description: "Genre of the quote"
#      required: true
#      type: "string"
#      enum: ["age", "love", "freedom", "famous", "romantic", "sad", "suspense", "demo"]
#  responses:
#    200:
#      description: Success response of the quotes.
#      schema:
#        $ref: '#/definitions/com.krishna.model.QuotesQuery'
#    400:
#      description: Not found genre in the database.
#    404:
#      description: Not found. Database is empty.
###
GET      /:genre                controllers.quotes.QuoteController.getGenreQuote(genre: com.krishna.model.Genre.Value)